int i
int testeVar
float testeF
int result
testeF = 2 * 2.5

if (testeF < 3) {
  testeVar = 10
}
else {
  testeVar = 3
}

i = 0
result = 3

while ( i < testeVar ) {
  result = result * 3
  i = i + 1
}



return result

define i32 @main() {
entry:
	%var1 = alloca i32, align 4
	%var2 = alloca i32, align 4
	%var3 = alloca float, align 4
	%var4 = alloca i32, align 4
	%0 = fadd float 0.0, 2.000000
	%1 = fadd float 0.0, 2.500000
	%2 = fmul float %0, %1
	store float %2, ptr %var3, align 4;
	%3 = load i32, i32* %var3, align 4
	%4 = add i32 0, 3
	%5 = icmp slt i32 %3, %4
	br i1 %5, label %Label1, label %Label0
Label1:
		%6 = add i32 0, 10
		store i32 %6, ptr %var2, align 4;
	br label %Label2

Label0:
		%7 = add i32 0, 3
		store i32 %7, ptr %var2, align 4;
br label %Label2

Label2:
	%8 = add i32 0, 0
	store i32 %8, ptr %var1, align 4;
	%9 = add i32 0, 3
	store i32 %9, ptr %var4, align 4;
	br label %Label3

Label3:
	%10 = load i32, i32* %var1, align 4
	%11 = load i32, i32* %var2, align 4
	%12 = icmp slt i32 %10, %11
	br i1 %12, label %Label5, label %Label4
Label5:
		%13 = load i32, i32* %var4, align 4
		%14 = add i32 0, 3
		%15 = mul i32 %13, %14
		store i32 %15, ptr %var4, align 4;
		%16 = load i32, i32* %var1, align 4
		%17 = add i32 0, 1
		%18 = add i32 %16, %17
		store i32 %18, ptr %var1, align 4;
br label %Label3

Label4:
	%19 = load i32, i32* %var4, align 4
	ret i32 %19

}
